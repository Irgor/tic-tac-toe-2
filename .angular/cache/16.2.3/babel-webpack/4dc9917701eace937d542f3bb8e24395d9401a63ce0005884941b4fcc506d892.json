{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nclass SocketService {\n  constructor(socket) {\n    this.socket = socket;\n    this.moveService = new Subject();\n  }\n  listenMoves() {\n    this.moveService.subscribe(moved => {\n      this.sendMove(moved);\n    });\n  }\n  sendMove(playerMove) {\n    this.socket.emit('moveType', playerMove);\n  }\n  getMoves() {\n    return this.socket.fromEvent('moved');\n  }\n  getPlayer() {\n    return this.socket.fromEvent('setPlayerRole');\n  }\n  shareGameOnBoard(game) {\n    this.socket.emit('setGameOnBoard', game);\n  }\n  getGameOnBoard() {\n    return this.socket.fromEvent('sendingGameOnBoard');\n  }\n  markMove(move) {\n    this.socket.emit('playerMarkMove', move);\n  }\n}\n_class = SocketService;\n_class.ɵfac = function SocketService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Socket));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { SocketService };","map":{"version":3,"names":["Subject","SocketService","constructor","socket","moveService","listenMoves","subscribe","moved","sendMove","playerMove","emit","getMoves","fromEvent","getPlayer","shareGameOnBoard","game","getGameOnBoard","markMove","move","i0","ɵɵinject","i1","Socket","factory","ɵfac","providedIn"],"sources":["C:\\Users\\igorn\\tic-tac-toe-2\\src\\app\\services\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  constructor(private socket: Socket) { }\n\n  moveService = new Subject<any>();\n\n  listenMoves() {\n    this.moveService.subscribe(moved => {\n      this.sendMove(moved);\n    });\n  }\n\n  sendMove(playerMove: string) {\n    this.socket.emit('moveType', playerMove);\n  }\n\n  getMoves() {\n    return this.socket.fromEvent('moved');\n  }\n\n  getPlayer() {\n    return this.socket.fromEvent<string>('setPlayerRole');\n  }\n\n  shareGameOnBoard(game: any) {\n    this.socket.emit('setGameOnBoard', game);\n  }\n\n  getGameOnBoard() {\n    return this.socket.fromEvent<{i: number, j: number, all: boolean}>('sendingGameOnBoard');\n  }\n\n  markMove(move: {i: number, j: number, mi: number, mj: number, player: string}) {\n    this.socket.emit('playerMarkMove', move);\n  }\n\n}\n"],"mappings":";AAEA,SAASA,OAAO,QAAQ,MAAM;;;AAG9B,MAGaC,aAAa;EACxBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAE1B,KAAAC,WAAW,GAAG,IAAIJ,OAAO,EAAO;EAFM;EAItCK,WAAWA,CAAA;IACT,IAAI,CAACD,WAAW,CAACE,SAAS,CAACC,KAAK,IAAG;MACjC,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACC,UAAkB;IACzB,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;EAC1C;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,MAAM,CAACS,SAAS,CAAC,OAAO,CAAC;EACvC;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,MAAM,CAACS,SAAS,CAAS,eAAe,CAAC;EACvD;EAEAE,gBAAgBA,CAACC,IAAS;IACxB,IAAI,CAACZ,MAAM,CAACO,IAAI,CAAC,gBAAgB,EAAEK,IAAI,CAAC;EAC1C;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACb,MAAM,CAACS,SAAS,CAAuC,oBAAoB,CAAC;EAC1F;EAEAK,QAAQA,CAACC,IAAoE;IAC3E,IAAI,CAACf,MAAM,CAACO,IAAI,CAAC,gBAAgB,EAAEQ,IAAI,CAAC;EAC1C;;SAjCWjB,aAAa;;mBAAbA,MAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;;SAAbrB,MAAa;EAAAsB,OAAA,EAAbtB,MAAa,CAAAuB,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPxB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}